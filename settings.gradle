import java.nio.file.Files

pluginManagement {
	repositories {
		gradlePluginPortal()
		mavenCentral()

		maven {
			name "Quilt"
			url "https://maven.quiltmc.org/repository/release"
		}
		// Note: temporary mavens until Quilt buildtools and loader are ready.
		maven {
			name "Fabric"
			url "https://maven.fabricmc.net"
		}
		maven {
			name "Cotton"
			url "https://server.bbkr.space/artifactory/libs-release/"
		}
	}
}

rootProject.name = "qsl"

// Build logic is an included build for holding the convention plugins for generating libraries and modules.
includeBuild("build-logic")

// Libraries
library("core")

library("block")
library("command")
library("data")
library("gui")
library("item")

def library(String library) {
	include(library)

	def libraryProject = project(":$library")
	libraryProject.projectDir = file("library/$library")

	rootProject.projectDir.toPath().resolve("library/$library/").toFile().listFiles().each {
		// Is the module disabled?
		if (it.isDirectory()
				&& it.name != "src" // Ignore sources
				&& it.name != "build" // Ignore build artifacts
				&& !it.name.startsWith(".") // Ignore anything hidden on unix-like OSes
		) {
			// Libraries can be disabled by adding a file named DISABLE at the root of its directory
			if (Files.notExists(it.toPath().resolve("DISABLE"))) {
				include "$library:$it.name"
			}
		}
	}
}
